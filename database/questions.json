{ "_id" : { "$oid" : "5c1dfa2882a328120caa65ae" }, "question" : "Which among the following best describes polymorphism?", "correctAnswer" : "It is the ability for a message/data to be processed in more than one form", "wrong1" : "It is the ability for a message/data to be processed in only 1 form", "wrong2" : "It is the ability for many messages/data to be processed in one way", "wrong3" : "It is the ability for undefined message/data to be processed in at least one way", "wrong4" : "it is a wrong answer", "field" : "oop" }
{ "_id" : { "$oid" : "5c1dfead8415829d260699e4" }, "question" : "What do you call the languages that support classes but not polymorphism?", "correctAnswer" : "Object-based language", "wrong1" : "Class based language", "wrong2" : "Procedure Oriented language", "wrong3" : "If classes are supported, polymorphism will always be supported", "field" : "oop", "wrong4" : "it is a wrong answer" }
{ "_id" : { "$oid" : "5c27c1fb0b1f5f23a00fcede" }, "question" : "Which of the following is the correct syntax to send an array as a parameter to function?", "correctAnswer" : "func(&array)", "wrong1" : "func(#array);", "wrong2" : "func *array ;", "wrong3" : "func(*array);", "wrong4" : "func(array[size]);", "field" : "pointers" }
{ "_id" : { "$oid" : "5c27c2090b1f5f23a00fcedf" }, "question" : "Which is private member functions access scope?", "correctAnswer" : "Member functions which can only be used within the class", "wrong1" : "Member functions which can used outside the class", "wrong2" : "Member functions which are accessible in derived class", "wrong3" : "Member functions which canâ€™t be accessed inside the class", "wrong4" : "None of these", "field" : "oop" }
{ "_id" : { "$oid" : "5c27c2180b1f5f23a00fcee0" }, "question" : " Which of these best describes an array?", "correctAnswer" : "Container of objects of similar types", "wrong1" : "A data structure that shows a hierarchical behavior", "wrong2" : "Container of objects of mixed types", "wrong3" : "Container of objects of integer only", "wrong4" : "All of the mentioned", "field" : "array" }
{ "_id" : { "$oid" : "5c27c24d0b1f5f23a00fcee1" }, "question" : " Generic pointers can be declared with__________ . ", "correctAnswer" : "auto", "wrong1" : "void", "wrong2" : "asm", "wrong3" : "let", "wrong4" : "None of these", "field" : "pointers" }
{ "_id" : { "$oid" : "5c28d5337f963bd0f6465acd" }, "question" : "Which of the followings is/are pointer-to-member declarator?", "correctAnswer" : "->*", "wrong1" : ".*", "wrong2" : "::*", "wrong3" : "both a and b", "wrong4" : "None of these", "field" : "pointers" }
{ "_id" : { "$oid" : "5c28d87b7f963bd0f6465b61" }, "question" : "Which one of the following is not shared by threads?", "correctAnswer" : "both program counter and stack", "wrong1" : "program counter", "wrong2" : "all of those", "wrong3" : "stack", "wrong4" : "none of the mentioned", "field" : "threads" }
{ "_id" : { "$oid" : "5c28d8827f963bd0f6465b63" }, "question" : "A process can be _______?", "correctAnswer" : "both single threaded and multithreaded", "wrong1" : "single threadedr", "wrong2" : "multithreaded", "wrong3" : "all of the above", "wrong4" : "none of the mentioned", "field" : "threads" }
{ "_id" : { "$oid" : "5c28d9867f963bd0f6465ba3" }, "question" : "If one thread opens a file with read privileges then", "correctAnswer" : "other threads in the same process can also read from that file", "wrong1" : "other threads in the another process can also read from that file", "wrong2" : "any other thread can not read from that file", "wrong3" : "all of the mentioned", "wrong4" : "none of the mentioned", "field" : "threads" }
{ "_id" : { "$oid" : "5c28dcb77f963bd0f6465c59" }, "question" : " How do you initialize an array in C?", "correctAnswer" : "int arr[3] = {1,2,3};", "wrong1" : "int arr[3] = (1,2,3);", "wrong2" : "int arr(3) = {1,2,3};", "wrong3" : "int arr(3) = (1,2,3);", "wrong4" : "All of the mentioned", "field" : "array" }
{ "_id" : { "$oid" : "5c28dcbe7f963bd0f6465c5c" }, "question" : "How do you instantiate an array in Java?", "correctAnswer" : "int arr[] = new int[3];", "wrong1" : "int arr[] = new int(3);", "wrong2" : "int arr[];", "wrong3" : "int arr() = new int(3);", "wrong4" : "All of the mentioned", "field" : "array" }
{ "_id" : { "$oid" : "5c28dd837f963bd0f6465c8a" }, "question" : "In Breadth First Search of Graph, which of the following data structure is used?", "correctAnswer" : "Queue", "wrong1" : "Stack", "wrong2" : "Linked list", "wrong3" : "None of the mentioned", "wrong4" : "All of the mentioned", "field" : "queue" }
{ "_id" : { "$oid" : "5c28dd927f963bd0f6465c8e" }, "question" : "A queue is a ?", "correctAnswer" : "FIFO (First In First Out) list", "wrong1" : "LIFO (Last In First Out) list", "wrong2" : "Ordered array", "wrong3" : "Linear tree", "wrong4" : "All of the mentioned", "field" : "queue" }
{ "_id" : { "$oid" : "5c28ddcf7f963bd0f6465c9c" }, "question" : "The data structure required for Breadth First Traversal on a graph is?", "correctAnswer" : "Queue", "wrong1" : "Stack", "wrong2" : "Array", "wrong3" : "Tree", "wrong4" : "All of the mentioned", "field" : "queue" }
{ "_id" : { "$oid" : "5c28de777f963bd0f6465cc4" }, "question" : " Process of inserting an element in stack is called ____________", "correctAnswer" : "Push", "wrong1" : "Create", "wrong2" : "Evaluation", "wrong3" : "Pop", "wrong4" : "None of the mentioned", "field" : "stack" }
{ "_id" : { "$oid" : "5c28de7e7f963bd0f6465cc7" }, "question" : "In a stack, if a user tries to remove an element from empty stack it is called _________", "correctAnswer" : "Underflow", "wrong1" : "Empty collection", "wrong2" : "Overflow", "wrong3" : "Garbage Collection", "wrong4" : "None of the mentioned", "field" : "stack" }
{ "_id" : { "$oid" : "5c28de847f963bd0f6465ccb" }, "question" : " Which of the following applications may use a stack?", "correctAnswer" : "All of the mentioned", "wrong1" : "Compiler Syntax Analyzer", "wrong2" : "Tracking of local variables at run time", "wrong3" : "A parentheses balancing program", "wrong4" : "All of the mentioned", "field" : "stack" }
{ "_id" : { "$oid" : "5c28dfa47f963bd0f6465d0a" }, "question" : " What is an AVL tree?", "correctAnswer" : "a tree which is balanced and is a height balanced tree", "wrong1" : "a tree which is unbalanced and is a height balanced tree", "wrong2" : "a tree with three children", "wrong3" : "a tree with atmost 3 children", "wrong4" : "All of the mentioned", "field" : "tree" }
{ "_id" : { "$oid" : "5c28dfac7f963bd0f6465d0d" }, "question" : "Why we need to a binary tree which is height balanced?", "correctAnswer" : "to avoid formation of skew trees", "wrong1" : "to save memory", "wrong2" : "to simplify storing", "wrong3" : "to attain faster memory access", "wrong4" : "all of the above", "field" : "tree" }
{ "_id" : { "$oid" : "5c28dfb57f963bd0f6465d12" }, "question" : " What is the maximum height of an AVL tree with p nodes?", "correctAnswer" : "log(p)", "wrong1" : "p", "wrong2" : "log(p)/2", "wrong3" : "p/2", "wrong4" : "2*p", "field" : "tree" }
